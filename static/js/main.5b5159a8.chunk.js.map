{"version":3,"sources":["components/Table/styles.module.scss","constants.js","helpers/getDay.js","helpers/prepareDate.js","helpers/getChartData.js","components/Chart/index.jsx","components/Table/index.jsx","instances/exApi.js","helpers/mapApiData.js","helpers/getCurrencyFromApi.js","pages/Main/index.jsx","App.js","index.js"],"names":["module","exports","API_BASE_OPRIONS","symbols","base","getDay","startDay","offset","dateObject","subDays","format","days","result","i","push","Date","now","initDays","getChartData","data","map","item","index","value","eur","rates","usd","toFixed","dateApi","date","Chart","dimensions","chartData","innerWidth","width","innerHeight","height","minTickGap","margin","top","right","left","bottom","strokeDasharray","dataKey","domain","type","stroke","activeDot","r","Table","className","classes","wrap","rowData","key","renderRow","exApi","axios","create","baseURL","mapApiData","cloneRates","getCurrencyByDate","preparedDate","a","customParams","currentParams","get","params","response","MainPage","props","useState","state","setState","React","window","setDimensions","handleResize","useEffect","timerId","setTimeout","day","newData","clearTimeout","debounceHandleResize","debounce","addEventListener","removeEventListener","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b5159a8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"styles_wrap__2ehMt\"};","export const API_BASE_URI = \"https://api.exchangeratesapi.io/\"\nexport const API_FORMAT_DAY = \"yyyy-MM-dd\"\nexport const API_SYMBOLS = \"USD,EUR\";\nexport const API_BASE_CURRENCY = \"RUB\";\nexport const API_BASE_OPRIONS = {symbols: API_SYMBOLS, base: API_BASE_CURRENCY}\nexport const OFFSET_DAYS = 30;","import prepareDate from \"./prepareDate\";\n\nimport { subDays } from 'date-fns';\n\nexport default function getDay(startDay, offset) {\n  return prepareDate(subDays(startDay, offset))\n}","import { format } from 'date-fns';\nimport { API_FORMAT_DAY } from '../constants';\n\nexport default function prepareDate(dateObject) {\n  return format(dateObject, API_FORMAT_DAY);\n}","import getDay from './getDay';\nimport { OFFSET_DAYS } from '../constants';\n\n\nfunction initDays() {\n  const result = [];\n  for (let i = OFFSET_DAYS; i > 0; i--) {\n    result.push(getDay(Date.now(), i));\n  }\n  return result;\n}\nconst days = initDays();\n\n\nexport default function getChartData(data) {\n  return days.map((item, index) => {\n    let value = {};\n    if(data[index]) {\n      const eur = data[index].rates[\"EUR\"];\n      const usd = data[index].rates[\"USD\"];\n      value = {eur: eur.toFixed(5),  usd: usd.toFixed(5), dateApi: data[index].date}\n    }\n    return {date: item, ...value};\n  })\n}","import React from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { OFFSET_DAYS } from '../../constants';\nimport getChartData from '../../helpers/getChartData';\n\n\n\nexport default function Chart({ dimensions, data }) {\n  const chartData = getChartData(data);\n  const innerWidth = dimensions.width;\n  const innerHeight = dimensions.height;\n\n  return (\n    <LineChart\n      minTickGap={1}\n      data={chartData}\n      width={innerWidth}\n      height={innerHeight*0.8}\n      margin={{\n        top: 5, right: 30, left: 20, bottom: 5,\n      }}\n    >\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"date\" domain={[0, OFFSET_DAYS]} />\n      <YAxis domain={[70, 85]} />\n      <Tooltip />\n      <Legend />\n      <Line type=\"monotone\" dataKey=\"usd\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n      <Line type=\"monotone\" dataKey=\"eur\" stroke=\"#82ca9d\" />\n    </LineChart>\n  );\n}","import React from 'react';\nimport classes from './styles.module.scss';\nimport getChartData from '../../helpers/getChartData';\n\n\nexport default function Table({ data }) {\n  function renderRow(rowData = []) {\n    return rowData.map(item => (\n      <tr key={item.date}>\n        <td>{item.date}</td>\n        <td>{item.dateApi}</td>\n        <td>{item.eur}</td>\n        <td>{item.usd}</td>\n      </tr>\n      )\n    );\n  }\n\n  \n  return (\n    <table className={classes.wrap}>\n      <thead>\n        <tr>\n          <th>Date request</th>\n          <th>Date response</th>\n          <th>EUR</th>\n          <th>USD</th>\n        </tr>\n      </thead>\n      <tbody>\n        {renderRow(getChartData(data))}\n      </tbody>\n    </table>\n  )\n}","// import qs from 'qs';\nimport axios from 'axios'\nimport { API_BASE_URI } from '../constants';\n\nconst exApi = axios.create({\n  baseURL: API_BASE_URI\n  // headers: {'Content-Type': 'application/json'}\n  // transformResponse: [function (data) {\n  //   console.dir(data)\n  //   return data;\n  // }],\n})\n\n\nexport default exApi","export default function mapApiData(data={}) {\n  const cloneRates = {...data.rates};\n  for(const key in cloneRates) {\n    cloneRates[key] = 1/cloneRates[key];\n  }\n  \n  return {...data, rates: cloneRates};\n}","import exApi from '../instances/exApi';\nimport mapApiData from './mapApiData';\nimport { API_BASE_OPRIONS } from '../constants';\n\n\nexport default async function getCurrencyByDate(preparedDate, customParams={}) {\n  const currentParams = {...API_BASE_OPRIONS, ...customParams};\n  const response = await exApi.get(preparedDate, {params: currentParams});\n  return mapApiData(response.data);\n}","import React, { useEffect, useState } from 'react';\nimport debounce from 'lodash/debounce';\nimport Chart from '../../components/Chart';\nimport Table from '../../components/Table';\nimport getCurrencyByDate from '../../helpers/getCurrencyFromApi';\nimport getDay from '../../helpers/getDay'\nimport { OFFSET_DAYS } from '../../constants';\n\n\nexport default function MainPage(props) {\n  const [state, setState] = useState({data: [], offset: OFFSET_DAYS});\n  const [dimensions, setDimensions] = React.useState({ \n    height: window.innerHeight,\n    width: window.innerWidth\n  });\n\n  useEffect(() => {\n    const timerId = setTimeout(async () => {\n      if(state.offset >= 0)  {\n        const day = getDay(Date.now(), state.offset)\n        const newData = await getCurrencyByDate(day)\n        const offset = state.offset - 1;\n        setState({data: [...state.data, newData], offset});\n      } else {\n        clearTimeout(timerId);\n      }\n    }, 1000);\n\n\n    return () => {\n      clearTimeout(timerId);\n    }\n  }, [state]);\n\n  useEffect(() => {\n    const debounceHandleResize = debounce(handleResize, 100);\n    window.addEventListener('resize', debounceHandleResize)\n    \n    return () => window.removeEventListener('resize', debounceHandleResize)\n  }, [])\n\n\n  function handleResize() {\n    setDimensions({\n      height: window.innerHeight,\n      width: window.innerWidth\n    })\n  }\n  \n  return (\n    <div>\n      <Chart data={state.data} dimensions={dimensions} />\n      <Table data={state.data} />\n    </div>\n  )\n}","import React from 'react';\nimport MainPage from './pages/Main';\nimport './App.scss';\n\nfunction App() {\n  return <MainPage />\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}